---
- name: Collect subnet names
  uri:
    url: "https://{{ satellite_fqdn }}/api/v2/subnets"
    method: GET
    user: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    validate_certs: no
    return_content: yes
  register: satellite_subnets

- name: Combine name and CIDR values
  set_fact:
    network_list: "{{ subnet_data.results | json_query('[].name + \"/\" + cidr') }}"

- name: Faile when there is not network for the provided ip
  fail:
    msg: "There is no subnet in satellite for the provided ip address"
  when: "{{ host_ip | match_network(network_list) }}"