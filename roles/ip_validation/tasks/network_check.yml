---
- name: Collect subnet names
  uri:
    url: "https://{{ satellite_fqdn }}/api/v2/subnets"
    method: GET
    user: "{{ satellite_user }}"
    password: "{{ satellite_password }}"
    validate_certs: no
    force_basic_auth: 1
    return_content: yes
  register: satellite_subnet_data

- name: Combine name and CIDR values
  set_fact:
    network_list: "{{ satellite_subnet_data['json']['results'] | get_subnet_info }}"

- name: Fail when there is not network for the provided ip
  fail:
    msg: "There is no subnet in satellite for the provided ip address"
  when: not host_ip | match_network(network_list)

- name: Fail check ip network facts
  fail:
    msg: "Check the ip to make sure it is not a gateway or broadcast"
  when: not host_ip | network_validation(net,gw)
  vars:
          net: "{{ my_network }}"
          gw:  "{{ my_gateway }}"

- set_fact:
        one: "{{ host_ip | match_network(network_list) }}"
        two: "{{ host_ip | network_validation(my_network,my_gateway) }}"